import { BaseMessage } from './base';
import { CloudToGlassesMessageType } from '../message-types';
import { UserSession } from '../user-session';
import { Layout } from '../layouts';
/**
 * Connection acknowledgment to glasses
 */
export interface ConnectionAck extends BaseMessage {
    type: CloudToGlassesMessageType.CONNECTION_ACK;
    userSession: Partial<UserSession>;
    sessionId: string;
}
/**
 * Connection error to glasses
 */
export interface ConnectionError extends BaseMessage {
    type: CloudToGlassesMessageType.CONNECTION_ERROR;
    message: string;
}
/**
 * Authentication error to glasses
 */
export interface AuthError extends BaseMessage {
    type: CloudToGlassesMessageType.AUTH_ERROR;
    message: string;
}
/**
 * Display update to glasses
 */
export interface DisplayEvent extends BaseMessage {
    type: CloudToGlassesMessageType.DISPLAY_EVENT;
    layout: Layout;
    durationMs?: number;
}
/**
 * App state change to glasses
 */
export interface AppStateChange extends BaseMessage {
    type: CloudToGlassesMessageType.APP_STATE_CHANGE;
    userSession: Partial<UserSession>;
    error?: string;
}
/**
 * Microphone state change to glasses
 */
export interface MicrophoneStateChange extends BaseMessage {
    type: CloudToGlassesMessageType.MICROPHONE_STATE_CHANGE;
    userSession: Partial<UserSession>;
    isMicrophoneEnabled: boolean;
}
/**
 * Union type for all messages from cloud to glasses
 */
export type CloudToGlassesMessage = ConnectionAck | ConnectionError | AuthError | DisplayEvent | AppStateChange | MicrophoneStateChange;
export declare function isResponse(message: CloudToGlassesMessage): boolean;
export declare function isUpdate(message: CloudToGlassesMessage): boolean;
export declare function isConnectionAck(message: CloudToGlassesMessage): message is ConnectionAck;
export declare function isConnectionError(message: CloudToGlassesMessage): message is ConnectionError;
export declare function isAuthError(message: CloudToGlassesMessage): message is AuthError;
export declare function isDisplayEvent(message: CloudToGlassesMessage): message is DisplayEvent;
export declare function isAppStateChange(message: CloudToGlassesMessage): message is AppStateChange;
export declare function isMicrophoneStateChange(message: CloudToGlassesMessage): message is MicrophoneStateChange;
//# sourceMappingURL=cloud-to-glasses.d.ts.map